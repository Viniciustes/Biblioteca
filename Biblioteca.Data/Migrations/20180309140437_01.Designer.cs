// <auto-generated />
using Biblioteca.Data.Context;
using Biblioteca.Data.Models.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace Biblioteca.Data.Migrations
{
    [DbContext(typeof(DbContextBiblioteca))]
    [Migration("20180309140437_01")]
    partial class _01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Biblioteca.Data.Models.Acervo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<decimal>("Custo");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<Guid?>("FilialId");

                    b.Property<string>("ImagemUrl");

                    b.Property<int>("Quantidade");

                    b.Property<Guid?>("StatusId");

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.HasIndex("StatusId");

                    b.ToTable("Acervo");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Acervo");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Cartao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DtGeracao");

                    b.Property<decimal>("Tarifa");

                    b.HasKey("Id");

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Checkout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BibliotecaPatrimonioId");

                    b.Property<Guid?>("CartaoId");

                    b.Property<DateTime>("DtDevolucao");

                    b.Property<DateTime>("DtEmprestimo");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecaPatrimonioId");

                    b.HasIndex("CartaoId");

                    b.ToTable("Checkout");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.CheckoutHistorico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AcervoId");

                    b.Property<Guid?>("CartaoId");

                    b.Property<DateTime?>("DtDevolucao");

                    b.Property<DateTime>("DtEmprestimo");

                    b.HasKey("Id");

                    b.HasIndex("AcervoId");

                    b.HasIndex("CartaoId");

                    b.ToTable("CheckoutHistorico");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPF");

                    b.Property<Guid?>("CartaoId");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<Guid?>("FilialResponsavelId");

                    b.Property<string>("Nome");

                    b.Property<string>("Sobrenome");

                    b.Property<string>("Telefone");

                    b.Property<string>("TelefoneCelular");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.HasIndex("FilialResponsavelId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Filial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<DateTime>("DtAbertura");

                    b.Property<Guid?>("EnderecoId");

                    b.Property<string>("ImagemUrl");

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.HorarioFuncionamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DiaDaSemana");

                    b.Property<Guid?>("FilialId");

                    b.Property<int>("HoraDeAbertura");

                    b.Property<int>("HoraDeFechamento");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.ToTable("HorarioFuncionamento");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("AcervoId");

                    b.Property<Guid?>("CartaoBibliotecaId");

                    b.Property<DateTime>("DtReserva");

                    b.HasKey("Id");

                    b.HasIndex("AcervoId");

                    b.HasIndex("CartaoBibliotecaId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.VOs.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CEP");

                    b.Property<string>("Cidade");

                    b.Property<Guid?>("ClienteId");

                    b.Property<string>("Complemento");

                    b.Property<string>("Estado");

                    b.Property<string>("Logadouro");

                    b.Property<string>("Numero");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Livro", b =>
                {
                    b.HasBaseType("Biblioteca.Data.Models.Acervo");

                    b.Property<string>("Autor");

                    b.Property<string>("CodigoBarras");

                    b.Property<string>("ISBN");

                    b.ToTable("Livro");

                    b.HasDiscriminator().HasValue("Livro");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Video", b =>
                {
                    b.HasBaseType("Biblioteca.Data.Models.Acervo");

                    b.Property<string>("Diretor");

                    b.ToTable("Video");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Acervo", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Filial", "Filial")
                        .WithMany("Patrimonios")
                        .HasForeignKey("FilialId");

                    b.HasOne("Biblioteca.Data.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Checkout", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Acervo", "BibliotecaPatrimonio")
                        .WithMany()
                        .HasForeignKey("BibliotecaPatrimonioId");

                    b.HasOne("Biblioteca.Data.Models.Cartao", "Cartao")
                        .WithMany("Checkouts")
                        .HasForeignKey("CartaoId");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.CheckoutHistorico", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Acervo", "Acervo")
                        .WithMany()
                        .HasForeignKey("AcervoId");

                    b.HasOne("Biblioteca.Data.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Cliente", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId");

                    b.HasOne("Biblioteca.Data.Models.Filial", "FilialResponsavel")
                        .WithMany("Clientes")
                        .HasForeignKey("FilialResponsavelId");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Filial", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.VOs.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.HorarioFuncionamento", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.Reserva", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Acervo", "Acervo")
                        .WithMany()
                        .HasForeignKey("AcervoId");

                    b.HasOne("Biblioteca.Data.Models.Cartao", "CartaoBiblioteca")
                        .WithMany()
                        .HasForeignKey("CartaoBibliotecaId");
                });

            modelBuilder.Entity("Biblioteca.Data.Models.VOs.Endereco", b =>
                {
                    b.HasOne("Biblioteca.Data.Models.Cliente")
                        .WithMany("Endereco")
                        .HasForeignKey("ClienteId");
                });
#pragma warning restore 612, 618
        }
    }
}
